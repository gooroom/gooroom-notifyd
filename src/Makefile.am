pkglibexec_PROGRAMS = gooroom-notifyd

gooroom_notifyd_SOURCES = \
	$(BUILT_SOURCES) \
	main.c	\
	common.h \
	common.c \
	gooroom-notify-daemon.c \
	gooroom-notify-daemon.h \
	gooroom-notify-window.c \
	gooroom-notify-window.h


gooroom_notifyd_CFLAGS = \
	-DGNOMELOCALEDIR=\"$(localedir)\"	\
	-DDATADIR=\"$(datadir)\" \
	$(GTK_CFLAGS) 		\
	$(GIO_CFLAGS) 		\
	$(GIO_UNIX_CFLAGS)	\
	$(GLIB_CFLAGS) 	    \
    $(LIBNOTIFY_CFLAGS) \
	$(X11_CFLAGS)


gooroom_notifyd_LDADD = \
	$(GTK_LIBS) 		\
	$(GIO_LIBS) 		\
	$(GIO_UNIX_LIBS)	\
	$(GLIB_LIBS)		\
	$(LIBNOTIFY_LIBS)	\
	$(X11_LIBS)

gooroom_notifyd_LDFLAGS = \
	-export-dynamic

resource_files = $(shell glib-compile-resources --sourcedir=$(srcdir) --generate-dependencies $(srcdir)/gresource.xml)
notify-resources.c: gresource.xml $(resource_files)
	$(AM_V_GEN) glib-compile-resources --target=$@ --sourcedir=$(srcdir) --generate-source --c-name notify $<
notify-resources.h: gresource.xml $(resource_files)
	$(AM_V_GEN) glib-compile-resources --target=$@ --sourcedir=$(srcdir) --generate-header --c-name notify $<

%.desktop: %.desktop.in
	$(AM_V_GEN) sed -e "s|\@pkglibexecdir\@|$(pkglibexecdir)|" $< > $@

gsettings_schemas_in_in = apps.gooroom-notifyd.gschema.xml.in.in

@INTLTOOL_XML_NOMERGE_RULE@

gsettings_schemas_in = $(gsettings_schemas_in_in:.xml.in.in=.xml.in)
gsettings_SCHEMAS = $(gsettings_schemas_in:.xml.in=.xml)

%.gschema.xml.in: %.gschema.xml.in.in Makefile
	$(AM_V_GEN) sed -e 's^\@GETTEXT_PACKAGE\@^$(GETTEXT_PACKAGE)^g' < $< > $@

@GSETTINGS_RULES@

autostartdir = $(sysconfdir)/xdg/autostart
autostart_DATA = gooroom-notifyd.desktop

BUILT_SOURCES = \
	gooroom-notify-gbus.h	\
	gooroom-notify-gbus.c	\
	gooroom-notify-marshal.h \
	gooroom-notify-marshal.c \
	gooroom-notify-enum-types.h \
	gooroom-notify-enum-types.c \
	notify-resources.h \
	notify-resources.c

gooroom-notify-gbus.h:
gooroom-notify-gbus.c: $(top_srcdir)/src/notify-dbus.xml Makefile
	$(AM_V_GEN) gdbus-codegen           \
	--interface-prefix org.freedesktop.Notifications  \
	--c-namespace GooroomNotify           \
	--generate-c-code gooroom-notify-gbus \
	$(top_srcdir)/src/notify-dbus.xml

gooroom-notify-marshal.h: stamp-gooroom-notify-marshal.h
	@true

stamp-gooroom-notify-marshal.h: gooroom-notify-marshal.list
	$(AM_V_GEN) ( \
	echo '/* this file is autogenerated -- do not edit */' > gooroom-notify-marshal.h \
	&& glib-genmarshal --prefix=gooroom_notify_marshal --header gooroom-notify-marshal.list >> gooroom-notify-marshal.h \
	&& echo timestamp >$@ )

gooroom-notify-marshal.c: gooroom-notify-marshal.list
	$(AM_V_GEN) ( \
	echo '/* this file is autogenerated -- do not edit */' >$@ \
	&& echo '#include "gooroom-notify-marshal.h"' >$@ \
	&& glib-genmarshal --prefix=gooroom_notify_marshal --body gooroom-notify-marshal.list >> $@ )

gooroom-notify-enum-types.h: stamp-gooroom-notify-enum-types.h
	@true

stamp-gooroom-notify-enum-types.h: gooroom-notify-window.h Makefile
	$(AM_V_GEN) ( \
	( cd $(srcdir) && glib-mkenums \
        --fhead "#ifndef __GOOROOM_NOTIFY_ENUM_TYPES_H__\n#define __GOOROOM_NOTIFY_ENUM_TYPES_H__\n#include <glib-object.h>\nG_BEGIN_DECLS\n" \
        --fprod "/* enumerations from \"@filename@\" */\n" \
        --vhead "GType @enum_name@_get_type(void) G_GNUC_CONST;\n#define GOOROOM_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" \
        --ftail "G_END_DECLS\n\n#endif /* __GOOROOM_NOTIFY_ENUM_TYPES_H__ */" gooroom-notify-window.h ) >> xgen-xneth \
	&& ( cmp -s xgen-xneth gooroom-notify-enum-types.h || cp xgen-xneth gooroom-notify-enum-types.h ) \
	&& rm -f xgen-xneth \
	&& echo timestamp >$@ )

gooroom-notify-enum-types.c: gooroom-notify-window.h Makefile
	$(AM_V_GEN) ( \
	( cd $(srcdir) && glib-mkenums \
		--fhead "#include \"gooroom-notify-enum-types.h\"\n#include \"gooroom-notify-window.h\"\n" \
		--fprod "\n/* enumerations from \"@filename@\" */" \
		--vhead "GType\n@enum_name@_get_type(void)\n{\n\tstatic GType type = 0;\n\tif(type == 0) {\n\tstatic const G@Type@Value values[] = {"\
		--vprod "\t{ @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
		--vtail "\t{ 0, NULL, NULL }\n\t};\n\ttype = g_@type@_register_static(\"@EnumName@\", values);\n  }\n\treturn type;\n}\n" \
		gooroom-notify-window.h ) >> xgen-xnetc \
	&& cp xgen-xnetc gooroom-notify-enum-types.c \
	&& rm -f xgen-xnetc \
	)

CLEANFILES = \
	gooroom-notify-gbus.c \
	gooroom-notify-gbus.h \
	gooroom-notify-marshal.c \
	gooroom-notify-marshal.h \
	gooroom-notify-enum-types.c \
	gooroom-notify-enum-types.h \
	stamp-gooroom-notify-enum-types.h \
	stamp-gooroom-notify-marshal.h

DISTCLEANFILES = \
	$(autostart_DATA) \
    $(gsettings_schemas_in) \
    $(gsettings_SCHEMAS) \
    *.gschema.valid
